---
- name: Check if the certs are previously created
  stat:
    path: /etc/docker/certs.d/{{ svc_name }}/ca.crt
  register: certs

- name: Certificates stuff
  block:
  - name: Create directory for the docker certs
    file:
      path: "/opt/docker_registry/certs"
      state: directory

  - name: Create the CA private key
    command: openssl genrsa -out ca.key 4096
    args:
      chdir: "/opt/docker_registry/certs"
  
  - name: Create the CA certificate
    command: openssl req -new -x509 -days 365 -key ca.key -out ca.crt  -subj "/C={{ ssl_country }}/ST={{ ssl_state }}/L={{ ssl_location }}/O={{ ssl_organization }}/OU={{ ssl_organizational_unit }}/CN={{ svc_name }}"
    args:
      chdir: "/opt/docker_registry/certs"
  
  - name:  Create a passwordless private key
    command: openssl genrsa -out client.key 4096
    args:
      chdir: "/opt/docker_registry/certs"
  
  - name:  Create a certificate request for the private key
    command: openssl req -nodes -newkey rsa:2048 -keyout {{ svc_name }}.key -out {{ svc_name }}.csr -subj "/C={{ ssl_country }}/ST={{ ssl_state }}/L={{ ssl_location }}/O={{ ssl_organization }}/OU={{ ssl_organizational_unit }}/CN={{ svc_name }}"
    args:
      chdir: "/opt/docker_registry/certs"
  
  - name:  Signing the certificates
    command: openssl x509 -req -days 365 -in {{ svc_name }}.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out {{ svc_name }}.cert
    args:
      chdir: "/opt/docker_registry/certs"

  - name: Save key and certs into a configMap 
    shell: kubectl create configmap registry-certs --from-file=/opt/docker_registry/certs/ --namespace="docker-registry" --dry-run -o yaml | kubectl apply -f -

  - name: Create '{{ svc_name }}' directory in docker certs.d
    file:
      path: "/etc/docker/certs.d/{{ svc_name }}"
      state: directory

  - name: Copy {{ svc_name }}.cert file
    copy:
      remote_src: True
      dest: "/etc/docker/certs.d/{{ svc_name }}/{{ svc_name }}.cert"
      src: "/opt/docker_registry/certs/{{ svc_name }}.cert"

  - name: Copy {{ svc_name }}.key file
    copy:
      remote_src: True
      dest: "/etc/docker/certs.d/{{ svc_name }}/{{ svc_name }}.key"
      src: "/opt/docker_registry/certs/{{ svc_name }}.key"

  - name: Copy ca.crt file
    copy:
      remote_src: True
      dest: "/etc/docker/certs.d/{{ svc_name }}/ca.crt"
      src: "/opt/docker_registry/certs/ca.crt"

  when: not certs.stat.exists
